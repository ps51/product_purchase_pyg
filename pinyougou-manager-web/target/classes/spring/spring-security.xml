<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
<!--
	beans:beans xmlns="http://www.springframework.org/schema/security"
	为Security默认加上命名空间前缀 beans:beans
-->

	<!--pattern属性指定的页面不登录也可以访问-->
	<http pattern="/*.html" security="none" />
	<http pattern="/css/**" security="none" />
	<http pattern="/js/**" security="none" />
	<http pattern="/img/**" security="none" />
	<http pattern="/plugins/**" security="none" />

	<!--页面的拦截规则  use-expressions：是否启动SPEL表达式、默认true-->
	<http use-expressions="false">
		<!--use-expressions如果不为false access属性的格式需要改成access="hasRole('ROLE_USER')"-->
		<!--access命名规则：ROLE_XXX-->
		<!--当前用户必须有ROLE_USER的角色才可以访问根目录及所属子目录的资源-->
		<intercept-url pattern="/**" access="ROLE_ADMIN" />
		<!--开启表单登录功能-->
		<form-login login-page="/login.html"
					default-target-url="/admin/index.html"
					authentication-failure-url="/login.html"
					always-use-default-target="true"/>
		<!--关闭跨域请求优化(防止恶意请求/攻击)-->
		<csrf disabled="true" />
		<!--开启iframe标签对外代码的引入-->
		<headers>
			<frame-options policy="SAMEORIGIN" />
		</headers>
		<!--退出功能 ，会会自动产生一个/logout请求，当请求这个路径时就会清除当前用户的所有信息-->
		<logout />
	</http>
	<!--认证管理器-->
	<authentication-manager>
		<!--认证提供者-->
		<authentication-provider>
			<user-service>
				<!--配置当前系统的用户   authorities配置这个用户属于哪一个角色-->
				<user name="admin" password="123" authorities="ROLE_ADMIN" />
				<user name="cherry" password="cherry" authorities="ROLE_ADMIN" />
			</user-service>
		</authentication-provider>
	</authentication-manager>

</beans:beans>